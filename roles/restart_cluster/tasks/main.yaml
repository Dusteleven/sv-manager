---

- name: Load config
  include_vars:
    file: "{{ sv_manager_config_path }}"
  become: true

- name: stop solana validator service
  systemd:
    name: solana-validator
    state: stopped
  tags:
    - validator.cluster.re
    - validator.cluster.restart.stop

- name: "install solana {{ validator_version }}"
  shell: solana-install init {{ validator_version }}
  environment:
    PATH: "{{ env_path }}/active_release/bin"
  become: yes
  become_user: "{{ validator_user }}"
  tags:
    - validator.cluster.restart
    - validator.cluster.restart.cli.install

- name: create snapshot from ledger
  become: yes
  become_user: "{{ validator_user }}"
  shell: "solana-ledger-tool --ledger {{ ledger_path }} create-snapshot {{ validator_ledger_slot }} {{ snapshots_path }} --snapshot-archive-path {{ snapshots_path }} --hard-fork {{ validator_ledger_slot }} --wal-recovery-mode skip_any_corrupted_record"
  environment:
    #PATH: "{{ node.validator_home }}/.local/share/solana/install/active_release/bin"
    PATH: "{{ env_path }}/active_release/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
    HOME: "{{ validator_home }}"
  tags:
    - validator.cluster.restart
    - validator.cluster.restart.ledger.snapshot

- name: Add cluster repair args to service
  blockinfile:
    path: /etc/default/solana-validator
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    insertbefore: "VALIDATOR_EXTRA_ARGS"
    block: |
        REPAIR_CLUSTER_ARGS="--wait-for-supermajority {{ validator_ledger_slot }} \
        --expected-shred-version {{ validator_shred_version }} \
        --expected-bank-hash {{ validator_bank_hash }}"
  tags:
    - validator.cluster.restart
    - validator.cluster.restart.args
    - validator.cluster.restart.args.add

#- name: Create solana validator service
#  template:
#    src: solana-validator.{{ cluster_environment }}.restart.service.j2
#    dest: /etc/systemd/system/solana-validator.service
#    backup: true
#    mode: 0644
#    owner: root
#    group: root
#  tags:
#    - validator.cluster.restart
#    - validator.cluster.restart.service

- name: start solana validator service
  systemd:
    name: solana-validator
    state: restart
    daemon_reload: yes
  tags:
    - validator.cluster.restart
    - validator.cluster.restart.start

- name: Remove cluster repair args from service
  blockinfile:
    path: /etc/default/solana-validator
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: ""
  tags:
    - validator.cluster.restart
    - validator.cluster.restart.args
    - validator.cluster.restart.args.remove
